{"version":3,"file":"static/js/859.f6e1599b.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Error({ error }) {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Something went wrong!</h1>\n      <p>{error}</p>\n    </div>\n  );\n}\n\nError.propTypes = {\n  Error: PropTypes.string,\n};\n\nexport default Error;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 32px;\n`;\n\nexport const Item = styled.li`\n  padding: 5px;\n  border-radius: 10px;\n  width: 100%;\n\n  &:not(:last-child) {\n    @media screen and (max-width: 767px) {\n      margin: 0 auto;\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 394px;\n  }\n\n  transition: color 250ms ease-in-out, background-color 250ms ease-in-out,\n    box-shadow 250ms ease-in-out, transform 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 10px 20px 10px,\n      rgba(0, 0, 0, 0.3) 0px 10px 7px -2px;\n    transform: scale(1.03);\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n\n  > img {\n    object-fit: cover;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  padding-top: 10px;\n  overflow: hidden;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { List, Item, ImgWrapper, InfoWrapper } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(\n        ({\n          id,\n          poster_path,\n          original_title,\n          name,\n          vote_average,\n          vote_count,\n        }) => (\n          <Item key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              <ImgWrapper>\n                <img src={BASE_IMG_URL + poster_path} alt={name} />\n              </ImgWrapper>\n              <InfoWrapper>\n                <h2>{original_title ?? name}</h2>\n                <p>Rating: {vote_average}</p>\n                <p>Votes: {vote_count} </p>\n              </InfoWrapper>\n            </NavLink>\n          </Item>\n        )\n      )}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      name: PropTypes.string,\n      original_title: PropTypes.string,\n      vote_average: PropTypes.number,\n      vote_count: PropTypes.number,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import * as API from '../../services/api';\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\n// import { toast } from 'react-hot-toast';\nimport Error from 'components/Error';\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus('pending');\n    API.getTrendingMovies()\n      .then(data => {\n        setMovies(data);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n        setError(error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Tranding movies</h1>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && <MoviesList movies={movies} />}\n      {status === 'rejected' && <Error error={error.message} />}\n    </div>\n  );\n}\n\nexport default Home;\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// #API_KEY = 'd03712107dcdd723f1173c5ee2c0d8c1';\n\nconst agent = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'd03712107dcdd723f1173c5ee2c0d8c1' },\n});\n\nexport async function getMoviesByQuery(query, controller) {\n  try {\n    const movies = await agent.get('search/movie', {\n      params: {\n        query,\n        signal: controller.signal,\n      },\n    });\n\n    return movies?.data?.results;\n  } catch (error) {\n    toast.error('Something went wrong ðŸ˜¥!');\n    console.error(error);\n  }\n}\n\nexport async function getTrendingMovies() {\n  try {\n    const movies = await agent.get('trending/movie/day', {\n      params: {\n        language: 'en-US',\n      },\n    });\n\n    return movies?.data?.results;\n  } catch (error) {\n    toast.error('Something went wrong ðŸ˜¥!');\n    console.error(error);\n  }\n}\n\nexport async function getMoviesDetailsById(id, controller) {\n  try {\n    const movie = await agent.get(`movie/${id}`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n\n    return movie?.data;\n  } catch (error) {\n    toast.error('Something went wrong ðŸ˜¥!');\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(id, controller) {\n  try {\n    const actors = await agent.get(`movie/${id}/credits`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n\n    return actors?.data?.cast;\n  } catch (error) {\n    toast.error('Something went wrong ðŸ˜¥!');\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(id, controller) {\n  try {\n    const reviews = await agent.get(`movie/${id}/reviews`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n\n    return reviews?.data?.results;\n  } catch (error) {\n    toast.error('Something went wrong ðŸ˜¥!');\n    console.error(error);\n  }\n}\n"],"names":["error","style","textAlign","List","styled","Item","ImgWrapper","InfoWrapper","movies","location","useLocation","map","id","poster_path","original_title","name","vote_average","vote_count","to","state","from","src","alt","useState","setMovies","status","setStatus","setError","useEffect","API","then","data","catch","Loader","MoviesList","Error","message","agent","axios","baseURL","params","api_key","getMoviesByQuery","query","controller","get","signal","results","toast","console","getTrendingMovies","language","getMoviesDetailsById","movie","getMovieCast","actors","cast","getMovieReviews","reviews"],"sourceRoot":""}